기능정의

초기 icon_bit = 0 으로 지정

Swipe Right 시, icon_bit--, 단 icon_bit는 6까지
Swipe Left 시, icon_bit++, 단 icon_bit는 0까지

File Stream	0	1	2	3	4	5	6 	..
Swipe Right	--	--	--	--	--	--	--
Swipe Left	++	++	++	++	++	++	++	


public int sw_bit = 0x00;
public int cir_bit = 0x00;
public int icon_bit = 0;

<공통적인 기능>
해당 기능이 실행되기 전에, Swipe Left 혹은, Swipe Right 를 사용할 시,
icon_bit 가 0에서 5까지 증가 혹은 감소한다... icon_bit++, icon_bit--  	(완료)
----------------------------------------------------------------------------------
( icon_bit ) <- sw_bit 
sw_bit는 Swipe Up을 했을 경우, 가동되는 비트이다. icon_bit가 0일때,
sw_bit 의 값은 0x01 이며, 이는 차례적으로 증가하여 0x20 값까지 증가한다...

0 0 0 0		0 0 0 0	 = 0x00
0 0 0 0		0 0 0 1  = 0x01 ....

이 값을 이용하여, HandLeft 일때, 해당 기능이 종료되는 기능들을 구현할 수 있다.
----------------------------------------------------------------------------------
( icon_bit ) <- cir_bit
cir_bit는, Swipe Left 혹은 Swipe Right 로 배정된 icon_bit에 대하여,
Circle 기능에 대한 bit 이다...  
( icon_bit 가 있을 때에는, 실행 기능으로 배정되며, Circle로 인하여 해당 기능이 활성화 된 이후에는 ) 		---> ( 이 부분까지는 완료 )
  
  (icon_bit == 0 && cir_bit == 1) 일 경우, in_cir_bit 등을 정의하여, icon에 해당하는 기능이 활성화 된 후의 "Circle" 의 기능도 추가하여
  Main 의 Right 쪽에서 처리도 가능하다.

따라서, 기본적으로는, icon_bit에 매치하여, 마지막에 출력된 detectedGestures 의 메세지가 "Circle" 인지 비교한다.
cir_bit 가 있는 곳에서, tri_bit 등을 정의한다면, "Triangle" 인지 검사하여 switch 처리를 해야할 것.
--------------------------------------------------------------------------------------------------------------------------------- 
<Internet Browser>
기본적으로, Web Browser 컨트롤을 기반으로 작성되었다. 
Jarvis의 Main 이 켜지자마자, browser_loaded 가 작동되어, 네이버 메인값으로 기본지정된다		(완료)

"Browser_grid" 값에 대하여 Visiblity 는 Hidden 으로 기본 지정되어있다가,
icon_bit 와 cir_bit 에 의하여 0x01 인지 확인 후, controlMouse 체크박스에 true 값을 날려, 마우스 컨트롤을 활성화 시키며, 나타나게 된다. 	
(완료)

sw_bit가 0x01 값인지 확인이 되면, controlMouse 체크박스에 false 값을 날려, 마우스 컨트롤을 해제시키고		(완료)
"Browser_grid" 을 Hidden 다시, 숨긴다.
--------------------------------------------------------------------------------------------------------------------------------
<Jarvis_BingMap>

icon_bit 와 cir_bit 에 의하여, 센서를 반환하며, 키는 것으로 대체된다.

BingMap.exe 에서, Exit 버튼을 누를 시, 센서를 반환하며, 다시 Jarvis의 메인을 불러오게 되는데.... 종료 모션을 지정하지 않았으니
녹화할때, 나를 불러서 동시에 녹화하는 것이 매우 현명하다..

어쨋든, Bing Map 에서 Exit 를 해도, 센서를 반환하며, Main 창만 키므로, BingMap 이 완전히 종료되진 않았다...
따라서 야매로, Swipe Left를 1번 한 후 (Bing Map icon), Swipe Up을 하게 되면, BingMap.exe 프로세스를 죽이게 해놧다 (ㅋㅋㅋㅋ.. 완료)
---------------------------------------------------------------------------------------------------------------------------------
<Media Player or Music Searcher> //일단 0X04로  정의함

미디어를 하드코딩해서 불러와서 미디어 제어를 목표로 하고자 함 //실패
문제점을 분석해보니  미디어에서 > 재생부분을 클릭을 안해주면는 우리가 조사한 API함수들이 안먹힌다.  그래서 방안을 생각해보니
먼저 자동재생 시키는 방법이 있다. 그래서 재생목록을 만들어 하드코딩해서 불러와 API함수들을 불러 각 제스쳐에 정의햇다.  //성공
완벽하게 이전,다음,정지/시작,종료까지 아주 잘되었다.(완료)

---------------------------------------------------------------------------------------------------------------------------------
<Document Searcher>



----------------------------------------------------------------------------------------------------------------------------------
< Picture Searcher > //추후

icon_bit 가 4인 상태에서 Circle 실행시, cir_bit 를 이용하여
그림 탐색기의 Visibility 를 해제시킨다. (이름은 형이 맘대로 지정....)

Swipe Left와 Swipe Right를 처리하는 곳에 기능을 더 추가시킨다... 
public int int_sw_bit = 0;

Swipe_Left
if ((icon_bit == 4 && cir_bit == 1)){
	// 이 경우, 기능이 활성화 되고, Swipe Left 와 Swipe Right 의 기능이 달라지므로 추가적으로 정의한다	
	if(in_sw_bit != detectedGestures.Items[detectedGestures.Items.Count -1])
		in_sw_bit++;
	// 이 detectedGestures 는... 모션인식 List 박스인데... 그냥 예로 들어놓음... 저기를 그림탐색기의 Listbox 명으로
}

Swipe_Right
if ((icon_bit == 4 && cir_bit == 1)){
	// 이 경우, 기능이 활성화 되고, Swipe Left 와 Swipe Right 의 기능이 달라지므로 추가적으로 정의한다	
	if(in_sw_bit != 0 )
		in_sw_bit--;
}

이 in_sw_bit 를 이용하여, Hand Left 인곳에서... in_sw_bit 에 해당하는 처리를 하면됨..

---------------------------------------------------------------------------------------------------------------------------------
<Movie Searcher>
